{
  "name": "sakai-ng",
  "version": "13.1.0",
  "scripts": {
    "backend:build-cache": "./mvnw dependency:go-offline",
    "backend:doc:test": "./mvnw -ntp javadoc:javadoc --batch-mode",
    "backend:info": "./mvnw -ntp enforcer:display-info --batch-mode",
    "backend:nohttp:test": "./mvnw -ntp checkstyle:check --batch-mode",
    "backend:start": "./mvnw -P-webapp",
    "backend:unit:test": "./mvnw -ntp -P-webapp verify --batch-mode -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.com.teamwill.rmkpro=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF",
    "build": "npm run webapp:prod",
    "ci:backend:test": "npm run backend:info && npm run backend:doc:test && npm run backend:nohttp:test && npm run backend:unit:test",
    "ci:e2e:package": "npm run java:$npm_package_config_packaging:$npm_package_config_default_environment -- -Pe2e -Denforcer.skip=true",
    "ci:e2e:prepare": "npm run ci:e2e:prepare:docker",
    "ci:e2e:prepare:docker": "npm run docker:db:up && npm run docker:others:up && docker ps -a",
    "preci:e2e:server:start": "npm run docker:db:await --if-present && npm run docker:others:await --if-present",
    "ci:e2e:server:start": "java -jar target/e2e.$npm_package_config_packaging --spring.profiles.active=$npm_package_config_default_environment -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.com.teamwill.rmkpro=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF --logging.level.org.springframework.web=ERROR",
    "ci:e2e:teardown": "npm run ci:e2e:teardown:docker",
    "ci:e2e:teardown:docker": "npm run docker:db:down --if-present && npm run docker:others:down && docker ps -a",
    "ci:frontend:build": "npm run webapp:build:$npm_package_config_default_environment",
    "ci:frontend:test": "npm run ci:frontend:build && npm test",
    "ci:server:package": "npm run java:$npm_package_config_packaging:$npm_package_config_default_environment",
    "clean-www": "rimraf target/classes/static/app/{src,target/}",
    "cleanup": "rimraf target/classes/static/",
    "docker:db:down": "docker-compose -f src/main/docker/mysql.yml down -v --remove-orphans",
    "docker:db:up": "docker-compose -f src/main/docker/mysql.yml up -d",
    "docker:kafka:down": "docker-compose -f src/main/docker/kafka.yml down -v --remove-orphans",
    "docker:kafka:up": "docker-compose -f src/main/docker/kafka.yml up -d",
    "docker:keycloak:down": "docker-compose -f src/main/docker/keycloak.yml down -v --remove-orphans",
    "docker:keycloak:up": "docker-compose -f src/main/docker/keycloak.yml up -d",
    "docker:others:await": "",
    "docker:others:down": "npm run docker:keycloak:down && npm run docker:kafka:down",
    "predocker:others:up": "",
    "docker:others:up": "npm run docker:keycloak:up && npm run docker:kafka:up",
    "java:docker": "./mvnw -ntp verify -DskipTests jib:dockerBuild",
    "java:docker:dev": "npm run java:docker -- -Pdev,webapp",
    "java:docker:prod": "npm run java:docker -- -Pprod",
    "java:jar": "./mvnw -ntp verify -DskipTests --batch-mode",
    "java:jar:dev": "npm run java:jar -- -Pdev,webapp",
    "java:jar:prod": "npm run java:jar -- -Pprod",
    "java:war": "./mvnw -ntp verify -DskipTests --batch-mode -Pwar",
    "java:war:dev": "npm run java:war -- -Pdev,webapp",
    "java:war:prod": "npm run java:war -- -Pprod",
    "jest": "jest --coverage --logHeapUsage --maxWorkers=2 --config jest.conf.js",
    "lint": "eslint . --ext .js,.ts",
    "lint:fix": "npm run lint -- --fix",
    "prettier:check": "prettier --check \"{,src/**/,webpack/}*.{md,json,yml,html,js,ts,tsx,css,scss,java}\"",
    "prettier:format": "prettier --write \"{,src/**/,webpack/}*.{md,json,yml,html,js,ts,tsx,css,scss,java}\"",
    "serve": "npm run start",
    "start": "ng serve --hmr",
    "start-tls": "npm run webapp:dev -- --env.tls",
    "pretest": "npm run lint",
    "test": "ng test --coverage --log-heap-usage -w=2",
    "test:watch": "npm run test -- --watch",
    "watch": "concurrently npm:start npm:backend:start",
    "webapp:build": "npm run clean-www && npm run webapp:build:dev",
    "webapp:build:dev": "ng build --configuration development",
    "webapp:build:prod": "ng build --configuration production",
    "webapp:dev": "ng serve",
    "webapp:dev-verbose": "ng serve --verbose",
    "webapp:prod": "npm run clean-www && npm run webapp:build:prod",
    "webapp:test": "npm run test"
  },
  "config": {
    "backend_port": "8085",
    "default_environment": "prod",
    "packaging": "jar"
  },
  "dependencies": {
    "@angular/animations": "13.1.0",
    "@angular/cdk": "^13.1.1",
    "@angular/common": "13.1.0",
    "@angular/compiler": "13.1.0",
    "@angular/core": "13.1.0",
    "@angular/flex-layout": "^13.0.0-beta.36",
    "@angular/forms": "13.1.0",
    "@angular/localize": "13.1.0",
    "@angular/platform-browser": "13.1.0",
    "@angular/platform-browser-dynamic": "13.1.0",
    "@angular/router": "13.1.0",
    "chart.js": "^3.3.2",
    "dayjs": "^1.10.7",
    "jquery": "^3.6.0",
    "ngx-infinite-scroll": "10.0.1",
    "ngx-webstorage": "9.0.0",
    "node-fetch": "^3.1.0",
    "popper.js": "^1.16.1",
    "primeflex": "^3.1.0",
    "primeicons": "5.0.0",
    "primeng": "^13.0.4",
    "prismjs": "1.26.0",
    "rxjs": "7.4.0",
    "tslib": "2.3.1",
    "zone.js": "0.11.4"
  },
  "devDependencies": {
    "@angular-builders/custom-webpack": "13.0.0",
    "@angular-builders/jest": "13.0.2",
    "@angular-eslint/eslint-plugin": "13.0.1",
    "@angular/cli": "13.1.1",
    "@angular/compiler-cli": "13.1.0",
    "@angular/service-worker": "13.1.0",
    "@types/jest": "27.0.3",
    "@types/node": "16.11.12",
    "@typescript-eslint/eslint-plugin": "5.6.0",
    "@typescript-eslint/parser": "5.6.0",
    "browser-sync": "2.27.7",
    "browser-sync-webpack-plugin": "2.3.0",
    "concurrently": "6.4.0",
    "eslint": "8.4.1",
    "eslint-config-prettier": "8.3.0",
    "eslint-webpack-plugin": "3.1.1",
    "lint-staged": "12.1.2",
    "typescript": "4.5.3"
  },
  "engines": {
    "node": ">=14.17.1"
  },
  "cacheDirectories": [
    "node_modules"
  ]
}
